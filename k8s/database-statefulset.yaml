apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: landlord
  labels:
    app: database
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: database
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: database
  namespace: landlord
spec:
  serviceName: database
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: mysql:9.0.1
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: user
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: root-password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: password
          livenessProbe:
            exec:
              command: [ "sh", "-c", "mysqladmin ping -p${MYSQL_ROOT_PASSWORD}" ]
            initialDelaySeconds: 30
            periodSeconds: 2
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: [ "sh", "-c", "mysql -h 127.0.0.1 -e \"SELECT 'true' WHERE 1=1\" -u root -p${MYSQL_ROOT_PASSWORD}" ]
            initialDelaySeconds: 10
            periodSeconds: 2
            timeoutSeconds: 1
          volumeMounts:
            - name: database-storage
              mountPath: /var/lib/mysql
              subPath: mysql
            - name: init-data
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: database-storage
          persistentVolumeClaim:
            claimName: database-storage
        - name: init-data
          secret:
            secretName: database-secrets
  volumeClaimTemplates:
    - metadata:
        name: database-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi